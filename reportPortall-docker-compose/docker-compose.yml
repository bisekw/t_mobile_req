version: '3.9'
services:

  gateway:
    image: traefik:v2.0.7
    ports:
      - "8080:8080" # HTTP
      - "8081:8081" # HTTP Administration
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - --providers.docker=true
      - --providers.docker.constraints=Label(`traefik.expose`, `true`)
      - --entrypoints.web.address=:8080
      - --entrypoints.traefik.address=:8081
      - --api.dashboard=true
      - --api.insecure=true
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    environment:
      - "ES_JAVA_OPTS=-Dlog4j2.formatMsgNoLookups=true"
      - "bootstrap.memory_lock=true"
      - "discovery.type=single-node"
      - "logger.level=INFO"
      - "xpack.security.enabled=true"
      - "ELASTIC_PASSWORD=elastic1q2w3e"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://elastic:elastic1q2w3e@localhost:9200/_cat/health"]
    restart: always

  analyzer:
    image: reportportal/service-auto-analyzer:5.7.4
    environment:
      LOGGING_LEVEL: info
      AMQP_EXCHANGE_NAME: analyzer-default
      AMQP_VIRTUAL_HOST: analyzer
      AMQP_URL: amqp://rabbitmq:rabbitmq@rabbitmq:5672
      ES_HOSTS: http://elastic:elastic1q2w3e@elasticsearch:9200
      MINIO_SHORT_HOST: minio:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    depends_on:
      elasticsearch:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    restart: always

  analyzer_train:
    image: reportportal/service-auto-analyzer:5.7.4
    environment:
      LOGGING_LEVEL: info
      AMQP_EXCHANGE_NAME: analyzer-default
      AMQP_VIRTUAL_HOST: analyzer
      AMQP_URL: amqp://rabbitmq:rabbitmq@rabbitmq:5672
      ES_HOSTS: http://elastic:elastic1q2w3e@elasticsearch:9200
      MINIO_SHORT_HOST: minio:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      INSTANCE_TASK_TYPE: train
      UWSGI_WORKERS: 1
    depends_on:
      elasticsearch:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    restart: always

  metrics-gatherer:
    image: reportportal/service-metrics-gatherer:5.7.3
    environment:
      LOGGING_LEVEL: info
      ES_HOST: http://elasticsearch:9200
      ES_USER: elastic
      ES_PASSWORD: elastic1q2w3e
      POSTGRES_USER: "rpuser"
      POSTGRES_PASSWORD: "rppass"
      POSTGRES_DB: "reportportal"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: 5432
      ALLOWED_START_TIME: "22:00"
      ALLOWED_END_TIME: "08:00"
      TZ: Europe/Warsaw
      AMQP_URL: amqp://rabbitmq:rabbitmq@rabbitmq:5672
      AMQP_VIRTUAL_HOST: analyzer
    depends_on:
      - elasticsearch
    restart: always

  db-scripts:
    image: reportportal/migrations:5.7.3
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_SERVER: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: reportportal
      POSTGRES_USER: rpuser
      POSTGRES_PASSWORD: rppass
    restart: on-failure

  postgres:
    image: postgres:12-alpine
    shm_size: '512m'
    environment:
      POSTGRES_USER: rpuser
      POSTGRES_PASSWORD: rppass
      POSTGRES_DB: reportportal
    volumes:
      - postgres:/var/lib/postgresql/data
    command: -c checkpoint_completion_target=0.9 -c work_mem=96MB -c wal_writer_delay=20ms -c synchronous_commit=off -c wal_buffers=32MB -c min_wal_size=2GB -c max_wal_size=4GB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 120s
      retries: 10
    restart: always

  rabbitmq:
    image: rabbitmq:3.7.16-management
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      retries: 5
    restart: always

  uat:
    image: reportportal/service-authorization:5.7.4
    environment:
      RP_DB_HOST: postgres
      RP_DB_USER: rpuser
      RP_DB_PASS: rppass
      RP_DB_NAME: reportportal
      RP_BINARYSTORE_TYPE: minio
      RP_BINARYSTORE_MINIO_ENDPOINT: http://minio:9000
      RP_BINARYSTORE_MINIO_ACCESSKEY: minio
      RP_BINARYSTORE_MINIO_SECRETKEY: minio123
      RP_SESSION_LIVE: 86400
    labels:
      - "traefik.http.middlewares.uat-strip-prefix.stripprefix.prefixes=/uat"
      - "traefik.http.routers.uat.middlewares=uat-strip-prefix@docker"
      - "traefik.http.routers.uat.rule=PathPrefix(`/uat`)"
      - "traefik.http.routers.uat.service=uat"
      - "traefik.http.services.uat.loadbalancer.server.port=9999"
      - "traefik.http.services.uat.loadbalancer.server.scheme=http"
      - "traefik.expose=true"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy

  index:
    image: reportportal/service-index:5.7.3
    depends_on:
      gateway:
        condition: service_started
    environment:
      - LB_URL=http://gateway:8081
      - TRAEFIK_V2_MODE=true
    labels:
      - "traefik.http.routers.index.rule=PathPrefix(`/`)"
      - "traefik.http.routers.index.service=index"
      - "traefik.http.services.index.loadbalancer.server.port=8080"
      - "traefik.http.services.index.loadbalancer.server.scheme=http"
      - "traefik.expose=true"
    restart: always

  api:
    image: reportportal/service-api:5.7.4
    depends_on:
      rabbitmq:
        condition: service_healthy
      gateway:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      RP_ELASTICSEARCHLOGMESSAGE_HOST: "true"
      RP_DB_HOST: postgres
      RP_DB_USER: rpuser
      RP_DB_PASS: rppass
      RP_DB_NAME: reportportal
      RP_AMQP_USER: rabbitmq
      RP_AMQP_PASS: rabbitmq
      RP_AMQP_APIUSER: rabbitmq
      RP_AMQP_APIPASS: rabbitmq
      RP_AMQP_ANALYZER-VHOST: analyzer
      RP_BINARYSTORE_TYPE: minio
      RP_BINARYSTORE_MINIO_ENDPOINT: http://minio:9000
      RP_BINARYSTORE_MINIO_ACCESSKEY: minio
      RP_BINARYSTORE_MINIO_SECRETKEY: minio123
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: info
      RP_REQUESTLOGGING: "false"
      MANAGEMENT_HEALTH_ELASTICSEARCH_ENABLED: "false"
      JAVA_OPTS: -Xmx1g -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp
    labels:
      - "traefik.http.middlewares.api-strip-prefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.api.middlewares=api-strip-prefix@docker"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.api.service=api"
      - "traefik.http.services.api.loadbalancer.server.port=8585"
      - "traefik.http.services.api.loadbalancer.server.scheme=http"
      - "traefik.expose=true"
    restart: always

  jobs:
    image: reportportal/service-jobs:5.7.4
    depends_on:
      rabbitmq:
        condition: service_healthy
      gateway:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      RP_ELASTICSEARCH_HOST: http://elasticsearch:9200
      RP_ELASTICSEARCH_USERNAME: elastic
      RP_ELASTICSEARCH_PASSWORD: elastic1q2w3e
      RP_DB_HOST: postgres
      RP_DB_USER: rpuser
      RP_DB_PASS: rppass
      RP_DB_NAME: reportportal
      RP_AMQP_USER: rabbitmq
      RP_AMQP_PASS: rabbitmq
      RP_AMQP_APIUSER: rabbitmq
      RP_AMQP_APIPASS: rabbitmq
      RP_AMQP_ANALYZER-VHOST: analyzer
      DATASTORE_TYPE: minio
      DATASTORE_MINIO_ENDPOINT: http://minio:9000
      DATASTORE_MINIO_ACCESSKEY: minio
      DATASTORE_MINIO_SECRETKEY: minio123
      RP_ENVIRONMENT_VARIABLE_CLEAN_ATTACHMENT_CRON: 0 0 */24 * * *
      RP_ENVIRONMENT_VARIABLE_CLEAN_LOG_CRON: 0 0 */24 * * *
      RP_ENVIRONMENT_VARIABLE_CLEAN_LAUNCH_CRON: 0 0 */24 * * *
      RP_ENVIRONMENT_VARIABLE_CLEAN_STORAGE_CRON: 0 0 */24 * * *
      RP_ENVIRONMENT_VARIABLE_STORAGE_PROJECT_CRON: 0 */5 * * * *
      RP_ENVIRONMENT_VARIABLE_CLEAN_STORAGE_CHUNKSIZE: 1000
      RP_PROCESSING_LOG_MAXBATCHSIZE: 2000
      RP_PROCESSING_LOG_MAXBATCHTIMEOUT: 6000
      RP_AMQP_MAXLOGCONSUMER: 1
    labels:
      - traefik.http.middlewares.jobs-strip-prefix.stripprefix.prefixes=/jobs
      - traefik.http.routers.jobs.middlewares=jobs-strip-prefix@docker
      - traefik.http.routers.jobs.rule=PathPrefix(`/jobs`)
      - traefik.http.routers.jobs.service=jobs
      - traefik.http.services.jobs.loadbalancer.server.port=8686
      - traefik.http.services.jobs.loadbalancer.server.scheme=http
      - traefik.expose=true
    restart: always

  ui:
    image: reportportal/service-ui:5.7.4
    environment:
      - RP_SERVER_PORT=8080
    labels:
      - "traefik.http.middlewares.ui-strip-prefix.stripprefix.prefixes=/ui"
      - "traefik.http.routers.ui.middlewares=ui-strip-prefix@docker"
      - "traefik.http.routers.ui.rule=PathPrefix(`/ui`)"
      - "traefik.http.routers.ui.service=ui"
      - "traefik.http.services.ui.loadbalancer.server.port=8080"
      - "traefik.http.services.ui.loadbalancer.server.scheme=http"
      - "traefik.expose=true"
    restart: always

  minio:
    image: minio/minio:RELEASE.2020-10-27T04-03-55Z
    volumes:
      - minio:/data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server /data
    healthcheck:
      test: ["CMD","curl","-f","http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: always

  jenkins:
    image: jenkins/jenkins:lts-jdk11
    container_name: jenkins
    user: root
    environment:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
    ports:
      - "8082:8080"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

volumes:
  postgres:
  minio:
  jenkins_home:
